name: Daily Backtest

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # 毎日JST9時（UTC0時）

jobs:
  backtest:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      # 1. リポジトリ取得
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Pythonセットアップ
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3. 依存パッケージインストール
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. SlackのOOS銘柄取得（任意）
      - name: Fetch OOS tickers from Slack
        id: fetch_oos
        env:
          SLACK_BOT_TOKEN:      ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CONFIG_CHANNEL: ${{ vars.SLACK_CONFIG_CHANNEL }}
          SLACK_FETCH_LIMIT:    50
        run: |
          python -m scripts.fetch_oos_from_slack > oos.txt || true
          echo "OOS_FIXED_TICKERS=$(cat oos.txt)" >> $GITHUB_ENV

      # 5. バックテスト実行
      - name: Run backtest
        env:
          OOS_FIXED_TICKERS: ${{ env.OOS_FIXED_TICKERS }}
          EXTRA_TICKERS:     ${{ vars.EXTRA_TICKERS }}
          SAMPLE_SIZE:       12
          OOS_RANDOM_SIZE:   8
          HOLDOUT_MONTHS:    12
        run: python -m scripts.run_backtest

      # 6. スマホ向け index.html を生成 
      - name: Build mobile index (reports/index.html)
        run: python -m scripts.make_index

      # 7. Pages 公開用アーティファクト作成
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: reports

      # 8. GitHub Pages へデプロイ
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

      # 9. Slack通知
      - name: Notify to Slack
        if: always()
        env:
          SLACK_BOT_TOKEN:  ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL:    ${{ secrets.SLACK_CHANNEL }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_MESSAGE:    "Backtest finished (JST)."
        run: python -m scripts.notify_slack


