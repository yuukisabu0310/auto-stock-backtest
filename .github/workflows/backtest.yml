name: backtest-daily

on:
  schedule:
    - cron: '0 22 * * *'  # 07:00 JST
  workflow_dispatch:

jobs:
  backtest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Fetch OOS tickers from Slack
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CONFIG_CHANNEL: ${{ secrets.SLACK_CONFIG_CHANNEL }}
        run: |
          python -m scripts.fetch_oos_from_slack > /tmp/oos.txt || true
          OOS=$(cat /tmp/oos.txt || true)
          if [ -n "$OOS" ]; then
            echo "OOS_FIXED_TICKERS=$OOS" >> $GITHUB_ENV
            echo "Using OOS_FIXED_TICKERS from Slack: $OOS"
          else
            echo "No OOS override from Slack. Using existing variables."
          fi

      - name: Run backtest
        env:
          SAMPLE_SIZE:       ${{ vars.SAMPLE_SIZE || '12' }}
          OOS_RANDOM_SIZE:   ${{ vars.OOS_RANDOM_SIZE || '8' }}
          RANDOM_SEED:       ${{ vars.RANDOM_SEED || '' }}
          EXTRA_TICKERS:     ${{ vars.EXTRA_TICKERS || '' }}
          HOLDOUT_MONTHS:    ${{ vars.HOLDOUT_MONTHS || '12' }}
          OOS_FIXED_TICKERS: ${{ vars.OOS_FIXED_TICKERS || '' }}
        run: python -m scripts.run_backtest

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: reports/**

      - name: Slack notify
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_BOT_TOKEN:   ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL:     ${{ vars.SLACK_CHANNEL }}
          SLACK_MESSAGE:     "Daily backtest completed (JST)."
        run: python -m scripts.notify_slack
